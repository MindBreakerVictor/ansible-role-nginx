---
- name: "(Setup: All NGINX) Ensure HTML Directory Exists"
  file:
    path: "{{ item.value.html_file_location }}"
    state: directory
  with_dict: "{{ nginx_html_demo_template }}"
  when: nginx_html_demo_template_enable

- name: "(Setup: All NGINX) Dynamically Generate HTML Files"
  template:
    src: "{{ item.value.template_file }}"
    dest: "{{ item.value.html_file_location }}/{{ item.value.html_file_name }}"
    backup: yes
  with_dict: "{{ nginx_html_demo_template }}"
  when: nginx_html_demo_template_enable

- name: "(Setup: All NGINX) Dynamically Generate NGINX Main Configuration File"
  template:
    src: "{{ nginx_main_template.template_file }}"
    dest: "{{ nginx_main_template.conf_file_location }}/{{ nginx_main_template.conf_file_name }}"
    backup: yes
    validate: nginx -t -c %s
  when: nginx_main_template_enable
  notify: "(Handler: All OSs) Reload NGINX"

- name: "(Setup: All NGINX) Ensure NGINX HTTP Directory Exists"
  file:
    path: "{{ item.value.conf_file_location }}"
    state: directory
  with_dict: "{{ nginx_http_template }}"
  when: nginx_http_template_enable

- name: "(Setup: All NGINX) Ensure NGINX HTTP Root Directory Exists"
  file:
    path: "{{ item.value.root }}"
    state: directory
    owner: "{{ item.value.root_owner|default('nginx') }}"
    group: "{{ item.value.root_group|default('nginx') }}"
    mode: "{{ item.value.root_permissions|default('u=rwx,g=rwx,o=rx') }}"
  with_dict: "{{ nginx_http_template }}"
  when: nginx_http_template_enable

- name: "(Setup: All NGINX) Ensure NGINX Proxy Cache Directories Exists"
  file:
    path: "{{ item.1.path }}"
    state: directory
    owner: "{{ nginx_main_template.user }}"
  with_subelements:
    - "{{ nginx_http_template }}"
    - reverse_proxy.proxy_cache_path
    - skip_missing: true
  when: nginx_http_template_enable

- name: "(Setup: All NGINX) Copy NGINX Config Validation Script"
  copy:
    src: files/conf/http/validate-nginx-config.sh
    dest: /opt/validate-nginx-config.sh
    mode: 0744
  when: nginx_http_template_enable

- name: "(Setup: All NGINX) Dynamically Generate NGINX HTTP Configuration Files"
  template:
    src: "{{ item.value.template_file }}"
    dest: "{{ item.value.conf_file_location }}/{{ item.value.conf_file_name }}"
    backup: yes
    validate: /opt/validate-nginx-config.sh %s
  with_dict: "{{ nginx_http_template }}"
  when: nginx_http_template_enable
  notify: "(Handler: All OSs) Reload NGINX"

- name: "(Setup: All NGINX) Ensure NGINX Stream Directory Exists"
  file:
    path: "{{ item.value.conf_file_location }}"
    state: directory
  with_dict: "{{ nginx_stream_template }}"
  when: nginx_stream_template_enable

- name: "(Setup: All NGINX) Dynamically Generate NGINX Stream Configuration Files"
  template:
    src: "{{ item.value.template_file }}"
    dest: "{{ item.value.conf_file_location }}/{{ item.value.conf_file_name }}"
    backup: yes
  with_dict: "{{ nginx_stream_template }}"
  when: nginx_stream_template_enable
  notify: "(Handler: All OSs) Reload NGINX"

- name: "(Setup: All NGINX) Dynamically Generate NGINX API Configuration File"
  template:
    src: "{{ nginx_rest_api_src }}"
    dest: "{{ nginx_rest_api_location }}"
    backup: yes
  notify: "(Handler: All OSs) Reload NGINX"
  when: nginx_rest_api_enable
